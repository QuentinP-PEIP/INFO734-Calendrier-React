{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quent\\\\Documents\\\\GitHub\\\\INFO734-StartUp-Site\\\\app\\\\src\\\\components\\\\card.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport \"../App.css\";\nconst useStyles = makeStyles({\n  root: {\n    width: 100,\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 18\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\nexport default function CardTodo({\n  todo,\n  todos,\n  setTodos\n}) {\n  const classes = useStyles();\n\n  const handleDone = () => {\n    // ... submit to API or something\n    setTodos(todos.map(item => {\n      if (item.id === todo.id) {\n        return { ...item,\n          done: !item.done\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  const affichageImage = () => {\n    var img = document.createElement(\"img\");\n    img.src = \"1.png\";\n    var div = document.getElementById(\"x\");\n    div.appendChild(img);\n    return img;\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    onClick: handleDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `\"title\" ${todo.done ? \"completed\" : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }\n  }, \" \", todo.title))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, todo.description)), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \" \", todo.done ? {\n    affichageImage\n  } : '', \" \")) // <div>\n  //     <span className={`\"title\" ${todo.done ? \"completed\" : ''}`}> {todo.title} </span>    \n  // </div>\n  ;\n}","map":{"version":3,"sources":["C:/Users/quent/Documents/GitHub/INFO734-StartUp-Site/app/src/components/card.js"],"names":["React","makeStyles","Card","CardActions","CardContent","Button","Typography","red","useStyles","root","width","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","CardTodo","todo","todos","setTodos","classes","handleDone","map","item","id","done","affichageImage","img","document","createElement","src","div","getElementById","appendChild","description"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nimport \"../App.css\";\r\n  \r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 100,\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nexport default function CardTodo({todo, todos, setTodos}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleDone = () => {\r\n        \r\n        // ... submit to API or something\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return { \r\n                    ...item, done : !item.done\r\n                }\r\n            }\r\n\r\n            return item;\r\n        }));\r\n\r\n    };\r\n\r\n    const affichageImage = () => {\r\n      var img = document.createElement(\"img\");\r\n      img.src = \"1.png\";\r\n\r\n      var div = document.getElementById(\"x\");\r\n      div.appendChild(img);\r\n    \r\n      return img;\r\n    };\r\n\r\n    return(\r\n\r\n        <Card className={classes.root} variant=\"outlined\" onClick={handleDone}>\r\n        <CardContent>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            <b><span className={`\"title\" ${todo.done ? \"completed\" : ''}`}> {todo.title}</span></b>\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {todo.description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n\r\n        </CardActions>\r\n            <div> {todo.done ? {affichageImage} : ''} </div>\r\n\r\n        \r\n\r\n\r\n        </Card>\r\n\r\n        // <div>\r\n        //     <span className={`\"title\" ${todo.done ? \"completed\" : ''}`}> {todo.title} </span>    \r\n        // </div>\r\n        \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
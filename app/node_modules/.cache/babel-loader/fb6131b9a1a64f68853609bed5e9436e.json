{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\Document sur le bureau\\\\Etude Annecy\\\\Semestre 7\\\\INFO734\\\\INFO734-StartUp-Site\\\\app\\\\src\\\\components\\\\card.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport \"../style/card.css\";\nconst useStyles = makeStyles({\n  root: {\n    width: 400,\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 18\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\nexport default function CardTodo({\n  todo,\n  todos,\n  setTodos\n}) {\n  const classes = useStyles();\n\n  const handleDone = () => {\n    setTodos(todos.map(item => {\n      if (item.id === todo.id) {\n        if (avant_date(item.date)) {\n          afficher_image(item.image);\n          return item;\n        }\n      }\n\n      return item;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    onClick: handleDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `\"title\"`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }\n  }, \" \", todo.title, \" \"))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })));\n\n  function avant_date(date_objet) {\n    //Renvoie true si date_objet est avant la date actuelle sinon renvoie false\n    let odate = date_objet.split(\"-\"); //On sépare l'année, le mois et le jour dans un tableau\n\n    const date = new Date(Date.now());\n    const month = parseInt(date.getMonth()) + 1; //Car getMonth() est de 0 à 11 et non 1 à 12!\n\n    if (odate[0] <= date.getFullYear() && odate[1] <= month.toString() && //Modifier en string à cause de la modification du dessus\n    odate[2] <= date.getDate()) {\n      return true;\n    } else return false;\n  }\n\n  function afficher_image(img_objet) {\n    var myWindow = window.open(\"\", \"MsgWindow\", \"width=800,height=800\");\n    var chemin = \"./image_noel/\" + img_objet;\n    console.log(chemin);\n    myWindow.document.write(\"<img src=\" + chemin + \">\");\n  }\n}","map":{"version":3,"sources":["D:/Document/Document sur le bureau/Etude Annecy/Semestre 7/INFO734/INFO734-StartUp-Site/app/src/components/card.js"],"names":["React","makeStyles","Card","CardContent","Typography","useStyles","root","width","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","CardTodo","todo","todos","setTodos","classes","handleDone","map","item","id","avant_date","date","afficher_image","image","date_objet","odate","split","Date","now","month","parseInt","getMonth","getFullYear","toString","getDate","img_objet","myWindow","window","open","chemin","console","log","document","write"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAO,mBAAP;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AACzBK,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,GADL;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADmB;AAKzBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,cADH;AAENC,IAAAA,MAAM,EAAE,OAFF;AAGNC,IAAAA,SAAS,EAAE;AAHL,GALiB;AAUzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAVkB;AAazBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX;AAboB,CAAD,CAA5B;AAkBA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAlB,EAA2C;AAEtD,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACrBF,IAAAA,QAAQ,CAACD,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;AAE3B,UAAIA,IAAI,CAACC,EAAL,KAAYP,IAAI,CAACO,EAArB,EAAyB;AACvB,YAAIC,UAAU,CAACF,IAAI,CAACG,IAAN,CAAd,EAA0B;AACxBC,UAAAA,cAAc,CAACJ,IAAI,CAACK,KAAN,CAAd;AACE,iBAAOL,IAAP;AACH;AACF;;AACD,aAAOA,IAAP;AACD,KATQ,CAAD,CAAR;AAUH,GAXD;;AAaA,sBAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,OAAO,CAACf,IAAzB;AAA+B,IAAA,OAAO,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAIgB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAED,OAAO,CAACR,KAA/B;AAAsC,IAAA,KAAK,EAAC,eAA5C;AAA4D,IAAA,YAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAG,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BK,IAAI,CAACL,KAAnC,MAAH,CADF,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADA,CAFJ;;AAeA,WAASa,UAAT,CAAoBI,UAApB,EAA+B;AAAE;AAC/B,QAAIC,KAAK,GAAGD,UAAU,CAACE,KAAX,CAAiB,GAAjB,CAAZ,CAD6B,CACM;;AAEnC,UAAML,IAAI,GAAG,IAAIM,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAb;AACA,UAAMC,KAAK,GAAGC,QAAQ,CAACT,IAAI,CAACU,QAAL,EAAD,CAAR,GAA4B,CAA1C,CAJ6B,CAIgB;;AAE7C,QAAGN,KAAK,CAAC,CAAD,CAAL,IAAYJ,IAAI,CAACW,WAAL,EAAZ,IACDP,KAAK,CAAC,CAAD,CAAL,IAAYI,KAAK,CAACI,QAAN,EADX,IAC+B;AAChCR,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAYJ,IAAI,CAACa,OAAL,EAFd,EAE6B;AACzB,aAAO,IAAP;AACH,KAJD,MAKK,OAAO,KAAP;AACN;;AAED,WAASZ,cAAT,CAAwBa,SAAxB,EAAmC;AACjC,QAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,EAAZ,EAAgB,WAAhB,EAA6B,sBAA7B,CAAf;AACA,QAAIC,MAAM,GAAG,kBAAkBJ,SAA/B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAH,IAAAA,QAAQ,CAACM,QAAT,CAAkBC,KAAlB,CAAwB,cAAcJ,MAAd,GAAuB,GAA/C;AACD;AACJ","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport \"../style/card.css\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 400,\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nexport default function CardTodo({todo, todos, setTodos}) {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const handleDone = () => {\r\n        setTodos(todos.map((item) => {\r\n          \r\n          if (item.id === todo.id) {\r\n            if (avant_date(item.date)){\r\n              afficher_image(item.image);\r\n                return item;\r\n            }\r\n          }\r\n          return item;\r\n        }));\r\n    };\r\n\r\n    return(\r\n\r\n        <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent onClick = {handleDone}>\r\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            <b><span className={`\"title\"`}> {todo.title} </span></b>\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {/* {todo.date} */}\r\n          </Typography>\r\n        </CardContent>\r\n        </Card>\r\n        \r\n    );\r\n    \r\n    function avant_date(date_objet){ //Renvoie true si date_objet est avant la date actuelle sinon renvoie false\r\n      let odate = date_objet.split(\"-\"); //On sépare l'année, le mois et le jour dans un tableau\r\n      \r\n      const date = new Date(Date.now());\r\n      const month = parseInt(date.getMonth()) + 1; //Car getMonth() est de 0 à 11 et non 1 à 12!\r\n      \r\n      if(odate[0] <= date.getFullYear() && \r\n        odate[1] <= month.toString() && //Modifier en string à cause de la modification du dessus\r\n        odate[2] <= date.getDate()){\r\n          return true;\r\n      }\r\n      else return false;\r\n    }\r\n\r\n    function afficher_image(img_objet) {\r\n      var myWindow = window.open(\"\", \"MsgWindow\", \"width=800,height=800\");\r\n      var chemin = \"./image_noel/\" + img_objet;\r\n      console.log(chemin);\r\n      myWindow.document.write(\"<img src=\" + chemin + \">\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}